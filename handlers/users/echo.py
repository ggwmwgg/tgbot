import gettext

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from loader import dp
from utils.db_api import quick_commands


@dp.message_handler()
async def bot_echo(message: types.Message, state: FSMContext):
    if await quick_commands.select_user(id=message.from_user.id):
        lang = await quick_commands.select_language(message.from_user.id)
        lan = gettext.translation('tgbot', localedir='locales', languages=[lang])
        lan.install()
        _ = lan.gettext
        text = _("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞")

        main_menu = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text=_("–ù–∞—á–∞—Ç—å –∑–∞–∫–∞–∑ üçΩ")),
                ],
                [
                    KeyboardButton(text=_("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üìù")),
                    KeyboardButton(text=_("–ú–æ–∏ –∑–∞–∫–∞–∑—ã üõí"))
                ],
                [
                    KeyboardButton(text=_("–ö–æ–Ω—Ç–∞–∫—Ç—ã üì≤")),
                    KeyboardButton(text=_("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üõ†"))
                ]
            ],
            resize_keyboard=True
        )

        await message.answer(text, reply_markup=main_menu)
        await state.finish()
    else:
        text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"

        main_menu = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text="–ù–∞—á–∞—Ç—å –∑–∞–∫–∞–∑ üçΩ"),
                ],
                [
                    KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üìù"),
                    KeyboardButton(text="–ú–æ–∏ –∑–∞–∫–∞–∑—ã üõí")
                ],
                [
                    KeyboardButton(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã üì≤"),
                    KeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üõ†")
                ]
            ],
            resize_keyboard=True
        )

        await message.answer(text, reply_markup=main_menu)
        await state.finish()


